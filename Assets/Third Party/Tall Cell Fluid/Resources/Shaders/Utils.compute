#include "Common.hlsl"
#pragma kernel copyFloat4Texture2DToAnother
#pragma kernel copyFloat4Texture3DToAnother
#pragma kernel clearIntTexture2D
#pragma kernel clearIntTexture3D
#pragma kernel clearFloat3Texture2D
#pragma kernel clearFloatTexture3D
#pragma kernel clearFloatTexture2D

Texture2D<float4> Source;
RWTexture2D<float4> Destination;
[numthreads(THREAD_COUNT_2D, THREAD_COUNT_2D, 1)]
void copyFloat4Texture2DToAnother (uint3 id : SV_DispatchThreadID)
{
    Destination[id.xy] = Source[id.xy];
}

Texture3D<float4> Source3D_R;
RWTexture3D<float4> Destination3D_RW;
[numthreads(THREAD_COUNT_3D, THREAD_COUNT_3D, THREAD_COUNT_3D)]
void copyFloat4Texture3DToAnother(uint3 id : SV_DispatchThreadID)
{
    Destination3D_RW[id] = Source3D_R[id];
}

RWTexture2D<int> ClearTarget2D_RW;
[numthreads(THREAD_COUNT_2D, THREAD_COUNT_2D, 1)]
void clearIntTexture2D(uint3 id : SV_DispatchThreadID)
{
    ClearTarget2D_RW[id.xy] = 0;
}

RWTexture3D<int> ClearTarget3D_RW;
int ClearIntTexture3DValue;
[numthreads(THREAD_COUNT_3D, THREAD_COUNT_3D, THREAD_COUNT_3D)]
void clearIntTexture3D(uint3 id : SV_DispatchThreadID)
{
    ClearTarget3D_RW[id] = ClearIntTexture3DValue;
}

RWTexture2D<float3> ClearFloat3Target3D_RW;
float3 ClearFloat3Value;
[numthreads(THREAD_COUNT_2D, THREAD_COUNT_2D, 1)]
void clearFloat3Texture2D(uint3 id : SV_DispatchThreadID)
{
    ClearFloat3Target3D_RW[id.xy] = ClearFloat3Value;
}

RWTexture3D<float> clearFloatTexture3D_RW;
float clearFloatTexture3DValue;
[numthreads(THREAD_COUNT_3D, THREAD_COUNT_3D, THREAD_COUNT_3D)]
void clearFloatTexture3D(uint3 id : SV_DispatchThreadID)
{
    clearFloatTexture3D_RW[id] = clearFloatTexture3DValue;
}

RWTexture2D<float> ClearFloatTarget2D_RW;
float clearFloatTexture2DValue;
[numthreads(THREAD_COUNT_2D, THREAD_COUNT_2D, 1)]
void clearFloatTexture2D(uint3 id : SV_DispatchThreadID)
{
    ClearFloatTarget2D_RW[id.xy] = clearFloatTexture2DValue;
}